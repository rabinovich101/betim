version: '3.8'

# Development override configuration
# Usage: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up

services:
  frontend:
    build:
      target: development
    container_name: betim-frontend-dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - WATCHPACK_POLLING=true  # For file watching in Docker
    command: npm run dev
    stdin_open: true
    tty: true

  backend:
    container_name: betim-backend-dev
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DEBUG=true
      - DATABASE_URL=postgresql://betim:betim_password@postgres:5432/betim_db
      - JWT_SECRET=dev_secret_key_change_in_production
      - CORS_ORIGIN=http://localhost:3000
    # Uncomment when backend is implemented
    # command: npm run dev

  # Uncomment for local database in development
  postgres:
    image: postgres:15-alpine
    container_name: betim-db-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=betim
      - POSTGRES_PASSWORD=betim_password
      - POSTGRES_DB=betim_db
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./backend/sql:/docker-entrypoint-initdb.d  # For initial SQL scripts
    networks:
      - betim-network
    restart: unless-stopped

  # Uncomment for Redis in development
  redis:
    image: redis:7-alpine
    container_name: betim-redis-dev
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data_dev:/data
    networks:
      - betim-network
    restart: unless-stopped

  # Development tools
  adminer:
    image: adminer
    container_name: betim-adminer
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=postgres
      - ADMINER_DESIGN=pepa-linha-dark
    networks:
      - betim-network
    depends_on:
      - postgres

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local